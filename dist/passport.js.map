{"version":3,"sources":["../src/passport.js"],"names":["db","passport","opts","jwtFromRequest","ExtractJwt","fromAuthHeaderAsBearerToken","secretOrKey","process","env","AUTH_SECRET","use","JwtStrategy","jwt_payload","done","user","getByEmail","email","message"],"mappings":";;;;;;AAAA;;AACA;;;;;;;;kBAEe,UAACA,EAAD,EAAKC,QAAL,EAAkB;AAC/B,MAAMC,OAAO,EAAb;AACAA,OAAKC,cAAL,GAAsBC,wBAAWC,2BAAX,EAAtB;AACAH,OAAKI,WAAL,GAAmBC,QAAQC,GAAR,CAAYC,WAA/B;AACAR,WAASS,GAAT,CAAa,IAAIC,qBAAJ,CAAgBT,IAAhB;AAAA,uEAAsB,iBAAOU,WAAP,EAAoBC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC7BC,kBAD6B;AAAA;AAAA;AAAA,qBAGlB,oBAASd,EAAT,EAAae,UAAb,CAAwBH,YAAYI,KAApC,CAHkB;;AAAA;AAG/BF,kBAH+B;;AAAA,kBAI1BA,IAJ0B;AAAA;AAAA;AAAA;;AAAA,+CAKtBD,KAAK,IAAL,EAAW,KAAX,EAAkB,EAACI,SAAS,uBAAV,EAAlB,CALsB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,+CASxBJ,iBATwB;;AAAA;AAAA,+CAW1BA,KAAK,IAAL,EAAWC,IAAX,CAX0B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAtB;;AAAA;AAAA;AAAA;AAAA,MAAb;AAaD,C","file":"passport.js","sourcesContent":["import {ExtractJwt, Strategy as JwtStrategy} from 'passport-jwt';\nimport userRepo from './repositories/user';\n\nexport default (db, passport) => {\n  const opts = {};\n  opts.jwtFromRequest = ExtractJwt.fromAuthHeaderAsBearerToken();\n  opts.secretOrKey = process.env.AUTH_SECRET;\n  passport.use(new JwtStrategy(opts, async (jwt_payload, done) => {\n    let user;\n    try {\n      user = await userRepo(db).getByEmail(jwt_payload.email);\n      if (!user) {\n        return done(null, false, {message: 'No user by that email'});\n      }\n    }\n    catch (e) {\n      return done(e);\n    }\n    return done(null, user);\n  }));\n};\n"]}