{"version":3,"sources":["../../src/repositories/reservations.js"],"names":["moment","require","mongoDB","db","index","find","toArray","console","error","store","body","now","unix","created_at","updated_at","insertOne","show","id","findOne","_id","ObjectId","update","findOneAndUpdate","destroy","findOneAndDelete"],"mappings":";;;;;;AAAA;;;;;;;;AAEA,IAAMA,SAASC,QAAQ,QAAR,CAAf;AACA,IAAMC,UAAUD,QAAQ,SAAR,CAAhB;;kBAEe,UAACE,EAAD,EAAQ;;AAErB,MAAMC;AAAA,uEAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEG,4BAAkBD,EAAlB,EAAsBE,IAAtB,GAA6BC,OAA7B,EAFH;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAIVC,sBAAQC,KAAR;AAJU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAR;;AAAA;AAAA;AAAA;AAAA,KAAN;;AASA,MAAMC;AAAA,wEAAQ,kBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEJC,iBAFI,GAEEX,SAASY,IAAT,EAFF;;AAGVF,mBAAKG,UAAL,GAAkBF,GAAlB;AACAD,mBAAKI,UAAL,GAAkBH,GAAlB;AAJU;AAAA,qBAKG,4BAAkBR,EAAlB,EAAsBY,SAAtB,CAAgCL,IAAhC,CALH;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAOVH,sBAAQC,KAAR;AAPU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAR;;AAAA;AAAA;AAAA;AAAA,KAAN;;AAYA,MAAMQ;AAAA,wEAAO,kBAAOC,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEI,4BAAkBd,EAAlB,EAAsBe,OAAtB,CAA8B,EAACC,KAAKjB,QAAQkB,QAAR,CAAiBH,EAAjB,CAAN,EAA9B,CAFJ;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAITV,sBAAQC,KAAR;AAJS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA,KAAN;;AASA,MAAMa;AAAA,wEAAS,kBAAOJ,EAAP,EAAWP,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAELC,iBAFK,GAECX,SAASY,IAAT,EAFD;;AAGXF,mBAAKG,UAAL,GAAkBF,GAAlB;AACAD,mBAAKI,UAAL,GAAkBH,GAAlB;AAJW;AAAA,qBAKE,4BAAkBR,EAAlB,EAAsBmB,gBAAtB,CAAuC,EAACH,KAAKjB,QAAQkB,QAAR,CAAiBH,EAAjB,CAAN,EAAvC,EAAoEP,IAApE,CALF;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAOXH,sBAAQC,KAAR;AAPW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAT;;AAAA;AAAA;AAAA;AAAA,KAAN;;AAYA,MAAMe;AAAA,wEAAU,kBAAON,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEC,4BAAkBd,EAAlB,EAAsBqB,gBAAtB,CAAuC,EAACL,KAAKjB,QAAQkB,QAAR,CAAiBH,EAAjB,CAAN,EAAvC,CAFD;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAIZV,sBAAQC,KAAR;AAJY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAV;;AAAA;AAAA;AAAA;AAAA,KAAN;;AASA,SAAO;AACLJ,gBADK;AAELK,gBAFK;AAGLO,cAHK;AAILK,kBAJK;AAKLE;AALK,GAAP;AAOD,C","file":"reservations.js","sourcesContent":["import reservationsModel from '../models/reservations';\r\n\r\nconst moment = require('moment');\r\nconst mongoDB = require('mongodb');\r\n\r\nexport default (db) => {\r\n\r\n  const index = async () => {\r\n    try {\r\n      return await reservationsModel(db).find().toArray();\r\n    } catch (err) {\r\n      console.error(err);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const store = async (body) => {\r\n    try {\r\n      const now = moment().unix();\r\n      body.created_at = now;\r\n      body.updated_at = now;\r\n      return await reservationsModel(db).insertOne(body);\r\n    } catch (err) {\r\n      console.error(err);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const show = async (id) => {\r\n    try {\r\n      return await reservationsModel(db).findOne({_id: mongoDB.ObjectId(id)});\r\n    } catch (err) {\r\n      console.error(err);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const update = async (id, body) => {\r\n    try {\r\n      const now = moment().unix();\r\n      body.created_at = now;\r\n      body.updated_at = now;\r\n      return await reservationsModel(db).findOneAndUpdate({_id: mongoDB.ObjectId(id)}, body);\r\n    } catch (err) {\r\n      console.error(err);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const destroy = async (id) => {\r\n    try {\r\n      return await reservationsModel(db).findOneAndDelete({_id: mongoDB.ObjectId(id)});\r\n    } catch (err) {\r\n      console.error(err);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  return {\r\n    index,\r\n    store,\r\n    show,\r\n    update,\r\n    destroy\r\n  };\r\n}\r\n"]}