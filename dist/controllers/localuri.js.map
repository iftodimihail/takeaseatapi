{"version":3,"sources":["../../src/controllers/localuri.js"],"names":["db","api","Router","get","req","res","query","id","showById","local","item","transformer","index","localuri","collection","error","show","params","uniqueLink"],"mappings":";;;;;;AAAA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;kBAEe,UAACA,EAAD,EAAQ;;AAErB,MAAMC,MAAM,IAAIC,eAAJ,EAAZ;;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAuBAD,MAAIE,GAAJ,CAAQ,GAAR,EAAa,qBAAb;AAAA,uEAAqB,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,mBAEbD,IAAIE,KAAJ,CAAUC,EAFG;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAGK,wBAAWP,EAAX,EAAeQ,QAAf,CAAwBJ,IAAIE,KAAJ,CAAUC,EAAlC,CAHL;;AAAA;AAGTE,mBAHS;AAAA,+CAIR,wBAASJ,GAAT,EAAcK,IAAd,CAAmBD,KAAnB,EAA0BE,kBAA1B,CAJQ;;AAAA;AAAA;AAAA,qBAMQ,wBAAWX,EAAX,EAAeY,KAAf,EANR;;AAAA;AAMTC,sBANS;AAAA,+CAOR,wBAASR,GAAT,EAAcS,UAAd,CAAyBD,QAAzB,EAAmCF,kBAAnC,CAPQ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,+CAUV,wBAASN,GAAT,EAAcU,KAAd,aAVU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAArB;;AAAA;AAAA;AAAA;AAAA;;AAcA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BAd,MAAIE,GAAJ,CAAQ,cAAR,EAAwB,qBAAxB;AAAA,wEAAgC,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEL,wBAAWL,EAAX,EAAegB,IAAf,CAAoBZ,IAAIa,MAAJ,CAAWC,UAA/B,CAFK;;AAAA;AAEtBL,sBAFsB;AAAA,gDAGrB,wBAASR,GAAT,EAAcK,IAAd,CAAmBG,QAAnB,EAA6BF,kBAA7B,CAHqB;;AAAA;AAAA;AAAA;AAAA,gDAKrB,wBAASN,GAAT,EAAcU,KAAd,cALqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAhC;;AAAA;AAAA;AAAA;AAAA;;AASA,SAAOd,GAAP;AACD,C","file":"localuri.js","sourcesContent":["import { Router } from 'express';\r\nimport response from '../concerns/response';\r\nimport repository from '../repositories/localuri';\r\nimport transformer from '../transformers/localuri.js';\r\nimport cors from 'cors';\r\n\r\nexport default (db) => {\r\n\r\n  const api = new Router();\r\n\r\n  /**\r\n   * List all resources\r\n   * @swagger\r\n   * /api/localuri:\r\n   *   get:\r\n   *     tags:\r\n   *       - Localuri\r\n   *     name: List localuri\r\n   *     summary: Lists all the localuri\r\n   *     security:\r\n   *       - bearerAuth: []\r\n   *     consumes:\r\n   *       - application/json\r\n   *     produces:\r\n   *       - application/json\r\n   *     responses:\r\n   *       200:\r\n   *         description: An array of localuri objects\r\n   *       401:\r\n   *         description: Not authorized to access this resource\r\n   *       422:\r\n   *         description: Unprocessable entity\r\n   */\r\n  api.get('/', cors(), async (req, res) => {\r\n    try {\r\n      if (req.query.id) {\r\n        const local = await repository(db).showById(req.query.id);\r\n        return response(res).item(local, transformer);\r\n      } else {\r\n        const localuri = await repository(db).index();\r\n        return response(res).collection(localuri, transformer);\r\n      }\r\n    } catch (err) {\r\n      return response(res).error(err);\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Show an existing resource\r\n   * @swagger\r\n   * /api/localuri/{uniqueLink}:\r\n   *   get:\r\n   *     tags:\r\n   *       - Localuri\r\n   *     name: Show localuri\r\n   *     summary: Shows an existing localuri\r\n   *     security:\r\n   *       - bearerAuth: []\r\n   *     consumes:\r\n   *       - application/json\r\n   *     produces:\r\n   *       - application/json\r\n   *     parameters:\r\n   *       - name: uniqueLink\r\n   *         in: path\r\n   *         schema:\r\n   *           type: string\r\n   *         required:\r\n   *           - uniqueLink\r\n   *     responses:\r\n   *       200:\r\n   *         description: A localuri object\r\n   *       401:\r\n   *         description: Not authorized to access this resource\r\n   *       422:\r\n   *         description: Unprocessable entity\r\n   */\r\n  api.get('/:uniqueLink', cors(), async (req, res) => {\r\n    try {\r\n      const localuri = await repository(db).show(req.params.uniqueLink);\r\n      return response(res).item(localuri, transformer);\r\n    } catch (err) {\r\n      return response(res).error(err);\r\n    }\r\n  });\r\n\r\n  return api;\r\n}\r\n"]}