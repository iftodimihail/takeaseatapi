{"version":3,"sources":["../../src/controllers/localuri.js"],"names":["db","api","Router","get","req","res","index","localuri","collection","transformer","error","show","params","uniqueLink","item"],"mappings":";;;;;;AAAA;;AACA;;;;AACA;;;;AACA;;;;;;;;kBAEe,UAACA,EAAD,EAAQ;;AAErB,MAAMC,MAAM,IAAIC,eAAJ,EAAZ;;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAuBAD,MAAIE,GAAJ,CAAQ,GAAR;AAAA,uEAAa,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEc,wBAAWL,EAAX,EAAeM,KAAf,EAFd;;AAAA;AAEHC,sBAFG;AAAA,+CAGF,wBAASF,GAAT,EAAcG,UAAd,CAAyBD,QAAzB,EAAmCE,kBAAnC,CAHE;;AAAA;AAAA;AAAA;AAAA,+CAKF,wBAASJ,GAAT,EAAcK,KAAd,aALE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAb;;AAAA;AAAA;AAAA;AAAA;;AASA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BAT,MAAIE,GAAJ,CAAQ,cAAR;AAAA,wEAAwB,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEG,wBAAWL,EAAX,EAAeW,IAAf,CAAoBP,IAAIQ,MAAJ,CAAWC,UAA/B,CAFH;;AAAA;AAEdN,sBAFc;AAAA,gDAGb,wBAASF,GAAT,EAAcS,IAAd,CAAmBP,QAAnB,EAA6BE,kBAA7B,CAHa;;AAAA;AAAA;AAAA;AAAA,gDAKb,wBAASJ,GAAT,EAAcK,KAAd,cALa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAxB;;AAAA;AAAA;AAAA;AAAA;;AAUA,SAAOT,GAAP;AACD,C","file":"localuri.js","sourcesContent":["import { Router } from 'express';\r\nimport response from '../concerns/response';\r\nimport repository from '../repositories/localuri';\r\nimport transformer from '../transformers/localuri.js';\r\n\r\nexport default (db) => {\r\n\r\n  const api = new Router();\r\n\r\n  /**\r\n   * List all resources\r\n   * @swagger\r\n   * /api/localuri:\r\n   *   get:\r\n   *     tags:\r\n   *       - Localuri\r\n   *     name: List localuri\r\n   *     summary: Lists all the localuri\r\n   *     security:\r\n   *       - bearerAuth: []\r\n   *     consumes:\r\n   *       - application/json\r\n   *     produces:\r\n   *       - application/json\r\n   *     responses:\r\n   *       200:\r\n   *         description: An array of localuri objects\r\n   *       401:\r\n   *         description: Not authorized to access this resource\r\n   *       422:\r\n   *         description: Unprocessable entity\r\n   */\r\n  api.get('/', async (req, res) => {\r\n    try {\r\n      const localuri = await repository(db).index();\r\n      return response(res).collection(localuri, transformer);\r\n    } catch (err) {\r\n      return response(res).error(err);\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Show an existing resource\r\n   * @swagger\r\n   * /api/localuri/{uniqueLink}:\r\n   *   get:\r\n   *     tags:\r\n   *       - Localuri\r\n   *     name: Show localuri\r\n   *     summary: Shows an existing localuri\r\n   *     security:\r\n   *       - bearerAuth: []\r\n   *     consumes:\r\n   *       - application/json\r\n   *     produces:\r\n   *       - application/json\r\n   *     parameters:\r\n   *       - name: uniqueLink\r\n   *         in: path\r\n   *         schema:\r\n   *           type: string\r\n   *         required:\r\n   *           - uniqueLink\r\n   *     responses:\r\n   *       200:\r\n   *         description: A localuri object\r\n   *       401:\r\n   *         description: Not authorized to access this resource\r\n   *       422:\r\n   *         description: Unprocessable entity\r\n   */\r\n  api.get('/:uniqueLink', async (req, res) => {\r\n    try {\r\n      const localuri = await repository(db).show(req.params.uniqueLink);\r\n      return response(res).item(localuri, transformer);\r\n    } catch (err) {\r\n      return response(res).error(err);\r\n    }\r\n\r\n  });\r\n\r\n  return api;\r\n}\r\n"]}