{"version":3,"sources":["../../src/controllers/price_types.js"],"names":["db","api","Router","get","req","res","index","priceTypess","collection","transformer","error","show","params","id","priceTypes","item"],"mappings":";;;;;;AAAA;;AACA;;;;AACA;;;;AACA;;;;;;;;kBAEe,UAACA,EAAD,EAAQ;;AAErB,MAAMC,MAAM,IAAIC,eAAJ,EAAZ;;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAuBAD,MAAIE,GAAJ,CAAQ,GAAR;AAAA,uEAAa,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEiB,2BAAWL,EAAX,EAAeM,KAAf,EAFjB;;AAAA;AAEHC,yBAFG;AAAA,+CAGF,wBAASF,GAAT,EAAcG,UAAd,CAAyBD,WAAzB,EAAsCE,sBAAtC,CAHE;;AAAA;AAAA;AAAA;AAAA,+CAKF,wBAASJ,GAAT,EAAcK,KAAd,aALE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAb;;AAAA;AAAA;AAAA;AAAA;;AASA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BAT,MAAIE,GAAJ,CAAQ,MAAR;AAAA,wEAAgB,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEa,2BAAWL,EAAX,EAAeW,IAAf,CAAoBP,IAAIQ,MAAJ,CAAWC,EAA/B,CAFb;;AAAA;AAENC,wBAFM;AAAA,gDAGL,wBAAST,GAAT,EAAcU,IAAd,CAAmBD,UAAnB,EAA+BL,sBAA/B,CAHK;;AAAA;AAAA;AAAA;AAAA,gDAKL,wBAASJ,GAAT,EAAcK,KAAd,cALK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAhB;;AAAA;AAAA;AAAA;AAAA;;AAUA,SAAOT,GAAP;AACD,C","file":"price_types.js","sourcesContent":["import { Router } from 'express';\r\nimport response from '../concerns/response';\r\nimport repository from '../repositories/price_types';\r\nimport transformer from '../transformers/filter_types.js';\r\n\r\nexport default (db) => {\r\n\r\n  const api = new Router();\r\n\r\n  /**\r\n   * List all resources\r\n   * @swagger\r\n   * /api/price-types:\r\n   *   get:\r\n   *     tags:\r\n   *       - Filter type\r\n   *     name: List priceTypes\r\n   *     summary: Lists all the priceTypes\r\n   *     security:\r\n   *       - bearerAuth: []\r\n   *     consumes:\r\n   *       - application/json\r\n   *     produces:\r\n   *       - application/json\r\n   *     responses:\r\n   *       200:\r\n   *         description: An array of priceTypes objects\r\n   *       401:\r\n   *         description: Not authorized to access this resource\r\n   *       422:\r\n   *         description: Unprocessable entity\r\n   */\r\n  api.get('/', async (req, res) => {\r\n    try {\r\n      const priceTypess = await repository(db).index();\r\n      return response(res).collection(priceTypess, transformer);\r\n    } catch (err) {\r\n      return response(res).error(err);\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Show an existing resource\r\n   * @swagger\r\n   * /api/price-types/{id}:\r\n   *   get:\r\n   *     tags:\r\n   *       - Filter type\r\n   *     name: Show priceTypes\r\n   *     summary: Shows an existing priceTypes\r\n   *     security:\r\n   *       - bearerAuth: []\r\n   *     consumes:\r\n   *       - application/json\r\n   *     produces:\r\n   *       - application/json\r\n   *     parameters:\r\n   *       - name: id\r\n   *         in: path\r\n   *         schema:\r\n   *           type: string\r\n   *         required:\r\n   *           - id\r\n   *     responses:\r\n   *       200:\r\n   *         description: A priceTypes object\r\n   *       401:\r\n   *         description: Not authorized to access this resource\r\n   *       422:\r\n   *         description: Unprocessable entity\r\n   */\r\n  api.get('/:id', async (req, res) => {\r\n    try {\r\n      const priceTypes = await repository(db).show(req.params.id);\r\n      return response(res).item(priceTypes, transformer);\r\n    } catch (err) {\r\n      return response(res).error(err);\r\n    }\r\n\r\n  });\r\n\r\n  return api;\r\n}\r\n"]}